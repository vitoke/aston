!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.aston=t():e.aston=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return t.get(e).value}n.r(t),n.d(t,"AstonError",function(){return i});class i extends Error{}const a=async(e,t,n,...r)=>{let o,a=[];if(t.ASTON_CONSTRUCTOR&&(a=await e.getItems(t.ASTON_CONSTRUCTOR)),t.ASTON_INJECT){const n=Object.keys(t.ASTON_INJECT),i=n.map(n=>e.get(t.ASTON_INJECT[n]));o=new t(...a,...r);const s=await Promise.all(i);for(let e=0;e<n.length;e++)o[n[e]]=s[e]}else try{o=n?t(e,...a,...r):t(...a,...r)}catch(e){if(e instanceof i)throw e;o=new t(...a,...r)}return o};class s{constructor(e){l.set(this,{writable:!0,value:void 0}),u.set(this,{writable:!0,value:()=>new s(o(this,l))}),c.set(this,{writable:!0,value:(e,t)=>{const{key:n,value:r,single:a,multi:s}=e;if(void 0===n&&void 0!==r)throw new i("can only inject a value with a key");const u=a||s;if(void 0!==u&&!(u instanceof Object))throw new i("single or multi must be constructable");if(void 0!==s&&"object"==typeof s)throw new i("multi cannot be an object instance");let c=0;if(void 0!==a&&c++,void 0!==s&&c++,void 0!==r&&c++,1!==c)throw new i("injected item should specify exactly one of the value, single or multi properties");let f=n;if(null==f){if("object"==typeof a)return void o(t,l).set(a.constructor,{value:a});f=a||s}if(o(t,l).has(f))throw new i("duplicate key added");u&&(e.astonInstance=t),o(t,l).set(f,e)}}),r(this,"inject",(...e)=>{if(0===e.length)return this;const t=o(this,u).call(this);return e.forEach(e=>{o(this,c).call(this,{...e},t)}),t}),r(this,"get",(e,...t)=>{if(!o(this,l).has(e))throw new i(`key not defined: ${e}`);const n=o(this,l).get(e),{single:r,value:s,multi:u,args:c=[],supplyAston:f=!1}=n;if(void 0!==s)return s;if(u)return a(n.astonInstance,u,f,...c,...t);if(t.length>0)throw new i("Single item should not receive extra arguments");return n.value=a(n.astonInstance,r,f,...c,...t),n.astonInstance=null,n.value}),f.set(this,{writable:!0,value:e=>{if(Array.isArray(e)){const[t,...n]=e;return this.get(t,...n)}return this.get(e)}}),r(this,"getItems",(...e)=>Promise.all(e.map(o(this,f)))),function(e,t,n){if(!t.has(e))throw new TypeError("attempted to set private field on non-instance");var r=t.get(e);if(!r.writable)throw new TypeError("attempted to set read only private field");r.value=n}(this,l,new Map(e))}}var l=new WeakMap,u=new WeakMap,c=new WeakMap,f=new WeakMap;const d=new s;t.default=d}])});